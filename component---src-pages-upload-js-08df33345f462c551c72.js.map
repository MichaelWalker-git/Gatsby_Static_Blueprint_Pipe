{"version":3,"sources":["webpack:///./node_modules/@material-ui/styles/esm/ThemeProvider/ThemeProvider.js","webpack:///./node_modules/@material-ui/core/esm/CssBaseline/CssBaseline.js","webpack:///./src/modules/theme.js","webpack:///./src/pages/upload.js"],"names":["html","WebkitFontSmoothing","MozOsxFontSmoothing","boxSizing","theme","color","palette","text","primary","typography","body2","backgroundColor","background","common","white","withStyles","fontWeight","fontWeightBold","body","margin","name","props","_props$children","children","classes","rawTheme","createMuiTheme","light","main","dark","secondary","warning","error","xLight","red","success","green","fontFamily","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","fontFamilySecondary","fontHeader","textTransform","default","placeholder","grey","h1","letterSpacing","h2","h3","h4","h5","h6","subtitle1","body1","useState","isButtonDisabled","toggleButton","window","global","Fragment","className","variant","target","rel","href","type","onChange","e","selectorFiles","length","reader","FileReader","onload","stringifiedJson","JSON","stringify","result","localStorage","setItem","readAsText","handleFileChange","files","size","onClick","navigate","disabled"],"mappings":"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","file":"component---src-pages-upload-js-08df33345f462c551c72.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp } from '@material-ui/utils';\nimport ThemeContext from '../useTheme/ThemeContext';\nimport useTheme from '../useTheme';\nimport nested from './nested'; // To support composition of theme.\n\nfunction mergeOuterLocalTheme(outerTheme, localTheme) {\n  if (typeof localTheme === 'function') {\n    var mergedTheme = localTheme(outerTheme);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!mergedTheme) {\n        console.error(['Material-UI: you should return an object from your theme function, i.e.', '<ThemeProvider theme={() => ({})} />'].join('\\n'));\n      }\n    }\n\n    return mergedTheme;\n  }\n\n  return _extends({}, outerTheme, {}, localTheme);\n}\n/**\n * This component takes a `theme` prop.\n * It makes the `theme` available down the React tree thanks to React context.\n * This component should preferably be used at **the root of your component tree**.\n */\n\n\nfunction ThemeProvider(props) {\n  var children = props.children,\n      localTheme = props.theme;\n  var outerTheme = useTheme();\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (outerTheme === null && typeof localTheme === 'function') {\n      console.error(['Material-UI: you are providing a theme function prop to the ThemeProvider component:', '<ThemeProvider theme={outerTheme => outerTheme} />', '', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\\n'));\n    }\n  }\n\n  var theme = React.useMemo(function () {\n    var output = outerTheme === null ? localTheme : mergeOuterLocalTheme(outerTheme, localTheme);\n\n    if (output != null) {\n      output[nested] = outerTheme !== null;\n    }\n\n    return output;\n  }, [localTheme, outerTheme]);\n  return React.createElement(ThemeContext.Provider, {\n    value: theme\n  }, children);\n}\n\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\n\nexport default ThemeProvider;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport { exactProp } from '@material-ui/utils';\nexport var html = {\n  WebkitFontSmoothing: 'antialiased',\n  // Antialiasing.\n  MozOsxFontSmoothing: 'grayscale',\n  // Antialiasing.\n  // Change from `box-sizing: content-box` so that `width`\n  // is not affected by `padding` or `border`.\n  boxSizing: 'border-box'\n};\nexport var body = function body(theme) {\n  return _extends({\n    color: theme.palette.text.primary\n  }, theme.typography.body2, {\n    backgroundColor: theme.palette.background[\"default\"],\n    '@media print': {\n      // Save printer ink.\n      backgroundColor: theme.palette.common.white\n    }\n  });\n};\nexport var styles = function styles(theme) {\n  return {\n    '@global': {\n      html: html,\n      '*, *::before, *::after': {\n        boxSizing: 'inherit'\n      },\n      'strong, b': {\n        fontWeight: theme.typography.fontWeightBold\n      },\n      body: _extends({\n        margin: 0\n      }, body(theme), {\n        // Add support for document.body.requestFullScreen().\n        // Other elements, if background transparent, are not supported.\n        '&::backdrop': {\n          backgroundColor: theme.palette.background[\"default\"]\n        }\n      })\n    }\n  };\n};\n/**\n * Kickstart an elegant, consistent, and simple baseline to build upon.\n */\n\nfunction CssBaseline(props) {\n  /* eslint-disable no-unused-vars */\n  var _props$children = props.children,\n      children = _props$children === void 0 ? null : _props$children,\n      classes = props.classes;\n  /* eslint-enable no-unused-vars */\n\n  return React.createElement(React.Fragment, null, children);\n}\n\nprocess.env.NODE_ENV !== \"production\" ? CssBaseline.propTypes = {\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  CssBaseline['propTypes' + ''] = exactProp(CssBaseline.propTypes);\n}\n\nexport default withStyles(styles, {\n  name: 'MuiCssBaseline'\n})(CssBaseline);","import { createMuiTheme } from '@material-ui/core/styles';\nimport { green, grey, red } from '@material-ui/core/colors';\n\nconst rawTheme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#69696a',\n      main: '#28282a',\n      dark: '#1e1e1f',\n    },\n    secondary: {\n      light: '#fff5f8',\n      main: '#ff3366',\n      dark: '#e62958',\n    },\n    warning: {\n      main: '#ffc071',\n      dark: '#ffb25e',\n    },\n    error: {\n      xLight: red[50],\n      main: red[500],\n      dark: red[700],\n    },\n    success: {\n      xLight: green[50],\n      main: green[500],\n      dark: green[700],\n    },\n  },\n  typography: {\n    fontFamily: \"'Work Sans', sans-serif\",\n    fontSize: 14,\n    fontWeightLight: 300, // Work Sans\n    fontWeightRegular: 400, // Work Sans\n    fontWeightMedium: 700, // Roboto Condensed\n    fontFamilySecondary: \"'Roboto Condensed', sans-serif\",\n  },\n});\n\nconst fontHeader = {\n  color: rawTheme.palette.text.primary,\n  fontWeight: rawTheme.typography.fontWeightMedium,\n  fontFamily: rawTheme.typography.fontFamilySecondary,\n  textTransform: 'uppercase',\n};\n\nconst theme = {\n  ...rawTheme,\n  palette: {\n    ...rawTheme.palette,\n    background: {\n      ...rawTheme.palette.background,\n      default: rawTheme.palette.common.white,\n      placeholder: grey[200],\n    },\n  },\n  typography: {\n    ...rawTheme.typography,\n    fontHeader,\n    h1: {\n      ...rawTheme.typography.h1,\n      ...fontHeader,\n      letterSpacing: 0,\n      fontSize: 60,\n    },\n    h2: {\n      ...rawTheme.typography.h2,\n      ...fontHeader,\n      fontSize: 48,\n    },\n    h3: {\n      ...rawTheme.typography.h3,\n      ...fontHeader,\n      fontSize: 42,\n    },\n    h4: {\n      ...rawTheme.typography.h4,\n      ...fontHeader,\n      fontSize: 36,\n    },\n    h5: {\n      ...rawTheme.typography.h5,\n      fontSize: 20,\n      fontWeight: rawTheme.typography.fontWeightLight,\n    },\n    h6: {\n      ...rawTheme.typography.h6,\n      ...fontHeader,\n      fontSize: 18,\n    },\n    subtitle1: {\n      ...rawTheme.typography.subtitle1,\n      fontSize: 18,\n    },\n    body1: {\n      ...rawTheme.typography.body2,\n      fontWeight: rawTheme.typography.fontWeightRegular,\n      fontSize: 16,\n    },\n    body2: {\n      ...rawTheme.typography.body1,\n      fontSize: 14,\n    },\n  },\n};\n\nexport default theme;\n","import React, { useState } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { navigate } from \"gatsby\"\n\nimport withRoot from \"../modules/withRoot\"\nimport { Button, Typography } from \"@material-ui/core\"\nimport \"../styles/Components.css\"\nimport AppAppBar from \"../modules/views/AppAppBar\"\nimport AppFooter from \"../modules/views/AppFooter\"\n\nconst callToActionText = `If you don't have one, download one:   `\n\nexport default (props) => {\n  const [isButtonDisabled, toggleButton] = useState(true)\n\n  if (typeof window === 'undefined') {\n    global.window = {}\n  }\n\n  function handleFileChange(selectorFiles) {\n    if (selectorFiles.length > 0) {\n      toggleButton(false)\n      const reader = new FileReader()\n      reader.onload = function(e) {\n        const stringifiedJson = JSON.stringify(e.target.result)\n        window.localStorage.setItem(\"jsonBluePrint\", stringifiedJson)\n      }\n      reader.readAsText(selectorFiles[0])\n    }\n  }\n\n  function submitResults() {\n    if (!isButtonDisabled) {\n      navigate\n      (\"/result\")\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <AppAppBar/>\n      <div className={\"uploadBody\"}>\n        <Typography\n          variant=\"h3\"\n          className={\"uploadElements\"}>Upload a blueprint</Typography>\n        <div className={\"spaceBetweenText\"}>\n          <Typography variant=\"body1\" className=\"callToAction\">{callToActionText}</Typography>\n          <div>{\" \"}</div>\n          <a target=\"_blank\"\n             rel=\"noopener noreferrer\"\n             href={\"https://www.mediafire.com/file/9ifmi239akwxrb8/blueprintTest.json/file\"}\n          >\n            <Typography variant=\"body1\">{\" here\"}</Typography>\n          </a>\n        </div>\n        <div className={\"uploadElements\"}>\n          <input type={\"file\"}\n                 className={\"uploadElements\"}\n                 onChange={(e) => handleFileChange(e.target.files)}/>\n        </div>\n        <Button\n          className={\"uploadElements\"}\n          color=\"secondary\"\n          size=\"large\"\n          variant=\"contained\"\n          onClick={submitResults}\n          disabled={isButtonDisabled}\n        >\n          Upload\n        </Button>\n      </div>\n      <AppFooter/>\n    </React.Fragment>\n\n  )\n}\n"],"sourceRoot":""}